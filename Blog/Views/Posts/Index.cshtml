@using Domain
@using Blog.Models.ViewModels.Posts
@model PostIndexViewModel
@{
    ViewData["Page"] = "post";
    ViewData["Title"] = "Blog Posts";
    ViewData["BackgroundImage"] = "'images/post-bg.jpg'";
    ViewData["Header"] = "Blog Posts";
    ViewData["SubHeader"] = "Search Posts Here";
}
@if(Model.Message != null)
{
    <div class="alert alert-info">@Model.Message</div>
}

<a class="btn btn-primary text-uppercase" asp-action="Edit">New Post</a>
<br />
<br />
<form method="get">
    <div class="form-group">
        <div class="input-group">
            <input type="search" name="SearchString" value="@ViewData["CurrentFilter"]" class="form-control form-control-lg" placeholder="Search post title here" />
            <span>
                <button class="btn btn-light btn-lg">
                    <i class="bi bi-search"></i>
                </button>
            </span>
        </div>
    </div>
</form>

@foreach(var post in Model.Posts)
{
    <!-- Post preview-->
    <div class="post-preview">
        <a asp-action="Detail" asp-route-postId="@post.PostId">
            <h2 class="post-title">@post.Title</h2>
            <h3 class="post-subtitle">@post.Subtitle</h3>
        </a>
        <p class="post-meta">
            Posted by
            <a href="#!">John Doe</a>
            on @post.CreateDate
        </p>
    </div>
    <!-- Divider-->
    <hr class="my-4" />
}

@{
    var prevDisabled = !Model.Posts.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Posts.HasNextPage ? "disabled" : "";
}

<div class="d-flex justify-content-end mb-4">
    <a asp-action="Index"
       asp-route-pageNumber="@(Model.Posts.PageIndex - 1)"
       asp-route-searchString="@Model.SearchString"
       class="btn btn-primary text-uppercase @prevDisabled">
        Newer Posts
    </a>
    <a asp-action="Index"
       asp-route-pageNumber="@(Model.Posts.PageIndex + 1)"
       asp-route-searchString="@Model.SearchString"
       class="btn btn-primary text-uppercase @nextDisabled">
        Older Posts
    </a>
</div>